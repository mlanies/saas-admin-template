---
import Layout from '@/layouts/Layout.astro';
import { GroupService } from '@/lib/services/group';

// Get group data
const groupId = Astro.params.id;
if (!groupId) {
  return new Response('Group ID is required', { status: 400 });
}

const { AUTH_DB, API_TOKEN } = Astro.locals.runtime.env as unknown as { AUTH_DB: D1Database; API_TOKEN: string };
const groupService = new GroupService(AUTH_DB);
const group = await groupService.getById(groupId);

if (!group) {
  return new Response('Group not found', { status: 404 });
}
---

<Layout title={`Edit Group: ${group.name}`}>
  <div class="space-y-6">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold tracking-tight">Edit Group</h1>
        <p class="text-muted-foreground">
          Update group information and settings
        </p>
      </div>
      <a
        href={`/admin/groups/${group.id}`}
        class="text-sm text-gray-600 hover:text-gray-900"
      >
        ‚Üê Back to Group
      </a>
    </div>

    <div class="max-w-2xl">
      <form id="editGroupForm" class="space-y-6">
        <div class="bg-white p-6 rounded-lg border">
          <h2 class="text-lg font-semibold mb-4">Group Information</h2>
          
          <div class="space-y-4">
            <div>
              <label for="name" class="block text-sm font-medium text-gray-700">
                Group Name *
              </label>
              <input
                type="text"
                id="name"
                name="name"
                value={group.name}
                required
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              />
            </div>
            
            <div>
              <label for="description" class="block text-sm font-medium text-gray-700">
                Description
              </label>
              <textarea
                id="description"
                name="description"
                rows="3"
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-blue-500 focus:border-blue-500"
              >{group.description || ''}</textarea>
            </div>
          </div>
        </div>

        <div class="flex items-center justify-between">
          <button
            type="button"
            onclick="window.history.back()"
            class="px-4 py-2 text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-md hover:bg-gray-50"
          >
            Cancel
          </button>
          <button
            type="submit"
            class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700"
          >
            Save Changes
          </button>
        </div>
      </form>
    </div>
  </div>
</Layout>

<script>
  document.getElementById('editGroupForm')?.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = new FormData(e.target as HTMLFormElement);
    const name = formData.get('name') as string;
    const description = formData.get('description') as string;
    
    if (!name.trim()) {
      alert('Group name is required');
      return;
    }
    
    try {
      const response = await fetch(`/api/groups/${window.location.pathname.split('/')[3]}`, {
        method: 'PUT',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': 'Bearer dev_token_12345'
        },
        body: JSON.stringify({ name, description })
      });
      
      if (response.ok) {
        alert('Group updated successfully!');
        window.location.href = `/admin/groups/${window.location.pathname.split('/')[3]}`;
      } else {
        const errorData = await response.json() as { error?: string };
        alert(`Error: ${errorData.error || 'Failed to update group'}`);
      }
    } catch (error) {
      alert('Error updating group');
      console.error('Error:', error instanceof Error ? error.message : 'Unknown error');
    }
  });
</script> 